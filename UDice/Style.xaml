<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	<!-- 风格 -->
	<!--关闭和最小化按钮的样式-->
	<ControlTemplate x:Key="GlyphButtonTemplate" TargetType="{x:Type Button}" >
		<ControlTemplate.Resources>
			<Storyboard x:Key="HoverOn">
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.2" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="HoverOff">
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="PressedOn">
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.2" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="PressedOff">
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
					<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<!-- 指定path的style -->
			<Style TargetType="{x:Type Path}">
				<Style.Triggers>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
						<Setter Property="Stroke" Value="White"/>
						<Setter Property="Fill" Value="White"/>
					</DataTrigger>
				</Style.Triggers>
				<Setter Property="Fill" Value="DarkGray"/>
				<Setter Property="Stroke" Value="DarkGray"/>
			</Style>
		</ControlTemplate.Resources>
		<Grid x:Name="grid"  Width="{TemplateBinding ContentControl.Width}" 
			  Height="{TemplateBinding ContentControl.Height}" 
			  Opacity="{TemplateBinding ContentControl.Opacity}"
			   Background="Transparent">

			<Border x:Name="HoverBorder" Opacity="0"
					Background="Black"/>
			<Border x:Name="PressedBorder" Opacity="0" 
					Background="Black"/>

			<!-- Present Content (text) of the button. -->
			<DockPanel Name="myContentPresenterDockPanel">
				<ContentPresenter Name="content"
					RecognizesAccessKey="True"
					Content="{TemplateBinding ContentControl.Content}"
					ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
					ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
					Margin="{TemplateBinding Control.Padding}"
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
				</ContentPresenter>
			</DockPanel>
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
				</Trigger.EnterActions>
			</Trigger>

			<Trigger Property="IsPressed" Value="True">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource PressedOff}"/>
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard  Storyboard="{StaticResource PressedOn}"/>
				</Trigger.EnterActions>

			</Trigger>

			<Trigger Property="UIElement.IsEnabled" Value="True">

			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="GlyphButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template" Value="{DynamicResource GlyphButtonTemplate}"/>
	</Style>

</ResourceDictionary>